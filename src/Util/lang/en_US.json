{
  "console": {
    "api_token": {
      "list": {
        "desc": "Lists your API Tokens",
        "help": "You may provide one or more filters like 'filter:value'",
        "summary_key": {
          "id": "Token ID",
          "name": "Token Name"
        },
        "summary_title": "Api Tokens:",
        "usage": "api-token:list"
      }
    },
    "banner": "Command Line Interface for the Nexcess.net / Thermo.io API Client\nâ“’ 2018 Nexcess.net, LLC\n",
    "ssl": {
      "create": {
        "created": "Certificate <info>#{id}</info> created",
        "creating": "Creating a new certificate",
        "desc": "Create a new certificate by supplying all the information in the distinguished name",
        "failed": "FAIL",
        "help":"Create a new SSL Certificate by passing in either a file name containing the distinguished name plus the other needed options, or by passing in all the options individually on the command line.",
        "opt_country":"DN:The two letter country code for the organization",
        "opt_dn_file": "Name of file containing a JSON encoded array of the distinguished name parts.",
        "opt_domain": "Host name for the certificate being created",
        "opt_locality": "DN: The city/locality for the organization",
        "opt_months": "Number of months for which the certificate will be valid",
        "opt_organization": "DN: Name of the organization that will own the certificate",
        "opt_organizational_unit": "DN: The department in the organization that owns the certificate",
        "opt_package_id": "NoxWorx Package ID for the certificate type to be generated",
        "opt_state": "DN:The state for the organization",
        "opt_street": "DN: Street address for the organization",
        "opt_approver_email":"'domain:email address' for each host name covered by the certificate",
        "summary_title": "Certificate Creation Summary",
        "summary_key" :{
          "id": "Certificate Id",
          "common_name": "Common Name"
        }
      },
      "createFromCsr": {
        "created": "Certificate <info>#{id}</info> created",
        "creating": "Creating a new certificate from a CSR",
        "desc": "Create a new certificate by supplying a Certificate Signing Request and private key.",
        "failed": "FAIL",
        "help":"Create a new SSL Certificate by passing in the file name for a Certificate Signing Request and private key.",
        "opt_csr_file": "Name of file containing the CSR",
        "opt_key_file": "Name of file containing the private key",
        "opt_months": "Number of months for which the certificate will be valid",
        "opt_package_id": "NoxWorx Package ID for the certificate type to be generated",
        "opt_approver_email":"'domain:email address' for each host name covered by the certificate",
        "summary_title": "Certificate Creation Summary",
        "summary_key" :{
          "id": "Certificate Id",
          "common_name": "Common Name"
        }
      },
      "exception" : {
        "invalid_filename": "{filename} is an invalid file name",
        "no_approver_email": "This command requires that you supply a valid approver email.",
        "invalid_approver_email": "You must supply one of the pre-selected approver email addresses for this command."
      },
      "import": {
        "created": "Certificate imported",
        "creating": "Importing new certificate",
        "desc": "Import an existing certificate into the system.",
        "failed": "FAIL",
        "help":"Import an existing SSL certificate into the system.",
        "opt_crt_file": "Name of file containing the CRT",
        "opt_key_file": "Name of file containing the private key",
        "opt_chain_file": "Name of file containing the optional chain certificate",
        "summary_title": "Import Results",
        "summary_key" :{
          "id": "Certificate Id",
          "common_name": "Common Name",
          "alt_names": "Additional host names included in the certificate",
          "is_expired": "Expired",
          "is_installable": "Installable",
          "is_multi_domain": "Multi-Domain certificate",
          "is_wildcard": "Wild card certificate",
          "valid_from_date": "Valid from",
          "valid_to_date": "Valid until"
        }
      },
      "list": {
        "summary_title" : "List of Certificates:",
        "summary_key" :{
          "id": "Certificate Id",
          "common_name": "Common Name"
        }
      }
    },
    "cloud_account": {
      "backup" : {
        "choices": {
          "backup": "<question> {filename} </question>",
          "no_backup_choices": "No backups are available to choose from on {domain} (use `cloud-account:backup:create -c {cloud_account_id}` to create one)"
        },
        "create": {
          "backup_complete": "Backup complete.\n<info>To download this backup, use:</info>\ncloud-account:backup:download --cloud-account-id {cloud_account_id} \\\n  --filename '{filename}'",
          "backup_started": "<info>To check on the status of this Backup, use:</info>\ncloud-account:backup:show --cloud-account-id {cloud_account_id} \\\n  --filename '{filename}'",
          "choose_cloud_account_id": "Choose which Cloud Account you want to create a Backup from:",
          "creating":"Creating",
          "created":"Created",
          "desc": "Create a new backup for a given cloud account",
          "downloading": "Downloading backup... ",
          "download_complete": "Download complete.\n  {filename}",
          "help": "Creates a new backup for a cloud account and optionally downloads it when complete. The given download path must exist and be writable.",
          "opt_cloud_account_id": "Cloud Account ID",
          "opt_download": "Local filesystem path to download backup to",
          "starting_backup": "Starting backup...",
          "summary_title": "Backup started.",
          "done": "Done",
          "summary_key": {
            "complete": "Complete",
            "download_url": "Download URL",
            "filedate": "File Date",
            "filename": "File Name",
            "filepath": "File Path",
            "filesize": "File Size",
            "filesize_bytes": "File Size (in bytes)",
            "type": "Type"
          },
          "usage": "cloud-account:backup:create --cloud-account-id 1234\n  cloud-account:backup:create --cloud-account-id 1234 --download /home/You/Downloads",
          "waiting": "Waiting for Backup to complete..."
        },
        "delete": {
          "choose_cloud_account_id": "Choose which Cloud Account you want to delete a Backup from:",
          "choose_filename": "Choose a Backup to delete:",
          "deleting": "<info>Deleting</info> {filename}",
          "desc" : "Delete a backup by it's file name.",
          "done": "Done",
          "help": "Delete a specific backup from the system",
          "usage": "cloud-account:backup:delete --filename file_name.tgz --cloud-account-id 1234"
        },
        "download": {
          "ask_download_path": "Where do you want to save your Backup?",
          "choose_cloud_account_id": "Choose which Cloud Account you want to download a Backup from:",
          "choose_filename": "Choose a Backup to download:",
          "desc" : "Download a specified backup",
          "done": "Done",
          "downloading" : "<info>Downloading</info> {filename} <info>to</info> {download_path}",
          "help": "Download a specific backup",
          "usage": "cloud-account:backup:download -d /path/to/place/download/in -f file_name.tgz -c 1234"
        },
        "list": {
          "desc" : "List all backups for a given cloud account.",
          "help": "Outputs a list of all the backups for a given cloud account",
          "opt_cloud_account_id": "Cloud Account ID",
          "summary_key": {
            "complete": "Complete",
            "filedate": "File Date",
            "filename": "File Name",
            "filesize": "File Size"
          },
          "summary_title": "Backups",
          "usage": "cloud-account:backup:list --cloud-account-id 1234",
          "done": "Done"
        },
        "show": {
          "choose_cloud_account_id": "Choose which Cloud Account you want to select a Backup from:",
          "choose_filename": "Choose a Backup to view:",
          "desc": "Show details of a cloud account backup",
          "help": "Gets information about a given cloud account backup. The --cloud-account-id and --filename may be omitted to choose from a list.",
          "how_to_download": "<info>To download this backup, use</info> cloud-account:backup:download \\\n  -c {cloud_account_id} \\\n  -f {filename} \\\n  --download-path TARGET_DOWNLOAD_DIRECTORY",
          "opt_cloud_account_id": "Cloud Account ID",
          "opt_filename": "Cloud Account Backup Filename",
          "summary_key" : {
            "complete": "Complete",
            "filedate": "Backup Started On",
            "filename": "File Name",
            "filesize": "File Size",
            "type": "Type"
          },
          "summary_title": "Cloud Account Backup",
          "usage": "cloud-account:backup:show --cloud-account-id 1234 --filename example.com+full-single-date.time.tgz"
        }
      },
      "choices": {
        "cloud_account": "#{id} <question> {domain} </question> ({ip})",
        "no_cloud_account_choices": "No cloud accounts are available to choose from (use `cloud-account:create` to create one)",
        "package": "<question> {name} </question> (${monthly_fee} /month) {user_concurrency} Concurrent Users, {virt_disk} GB Storage, {bandwidth} GB Bandwidth",
        "no_package_choices": "No Cloud Account service packages are available to choose from"
      },
      "create": {
        "app_desc": "<question> {app} </question>",
        "ask_domain": "What Domain Name do you want to use for your Cloud Account?",
        "choose_app_id": "Select an Application Environment for your Cloud Account:",
        "choose_cloud_id": "Choose which Cloud you want your Cloud Account to be hosted on:",
        "choose_package_id": "Choose a Service Level for your Cloud Account:",
        "cloud_desc": "<question> {location} </question> ({location_code})",
        "created": "\nYour new Cloud Account has been created. <info>Use</info> cloud-account:show --id {id} <info>to check on its status!</info>",
        "creating": "Your new Cloud Account is being created. <info>This may take a few momentsâ€¦</info>",
        "desc": "Creates a new Cloud Account",
        "failed": "<error>Creating your new Cloud Account failed.</error> Please open a support ticket.",
        "help": "Any option may be omitted and you will be prompted to choose from a menu.\nProviding an application name (e.g., 'magento') will select that application for you.",
        "opt_app": "Application Environment name (used for app_id lookup)",
        "opt_app_id": "Application Environment ID",
        "opt_cloud_id": "Cloud location ID",
        "opt_domain": "Domain Name",
        "opt_install_app": "Install the Application to the new Cloud Account?\n  (currently, this option applies only to Magento and WordPress Application Environments)",
        "opt_package_id": "Service Level ID",
        "summary_key": {
          "app": "App Environment",
          "cloud": "Cloud Location",
          "domain": "Domain",
          "service_level": "Service Level",
          "service_status": "Service Status",
          "state": "Cloud Account State",
          "temp_domain": "Temp Domain"
        },
        "usage": "cloud-account:create --domain cloud.example.com\n  cloud-account:create --app magento --domain magneto.example.com --install-app"
      },
      "list": {
        "desc": "Lists your Cloud Accounts",
        "help": "You may proivde one or more filters in the form 'filter:value'.",
        "summary_key": {
          "domain": "Domain Name",
          "id": "Cloud Account ID",
          "ip": "Public IP Address"
        },
        "summary_title": "Cloud Accounts:",
        "usage": "cloud-account:list\n  cloud-account:list --filter service.status:enabled"
      },
      "show": {
        "choose_id": "Select a Cloud Account to view:",
        "desc": "Shows details of an existing Cloud Account",
        "help": "Provide a service id, or use the --domain or --ip options to look up the desired service.",
        "opt_domain": "Cloud Account Domain Name (used for service_id lookup)",
        "opt_id": "Cloud Account Service ID",
        "opt_ip": "Cloud Account IP Address (used for service_id lookup)",
        "summary_app": "#{app_id} {identity}",
        "summary_key": {
          "app": "Application Environment",
          "deploy_date": "Date Deployed",
          "domain": "Domain",
          "environment": "Environment Details",
          "id": "ID",
          "ip": "Primary IP Address",
          "location": "Cloud",
          "service": "Service",
          "service_status": "Service Status",
          "status": "Status",
          "temp_domain": "Temporary Domain Name",
          "unix_username": "Unix (login) Username"
        },
        "summary_location": "#{cloud_id} {identity}",
        "summary_service": "#{service_id} {identity}",
        "summary_title": "Cloud Account Details:",
        "usage": "cloud-account:show --id 12345\n  cloud-account:show --domain cloud.example.com"
      }
    },
    "command": {
      "details": "Details:",
      "invalid_list_filter": "List filters must be in the format 'property:value'; '{filter}' is invalid",
      "lookup_match_ambiguous": "'{lookup}' matches multiple choices for {input}:\n {matches}",
      "missing_input": "Missing or invalid input for '{name}';\n see $ nexcess-cli {command} --help",
      "no_lookup_match": "'{lookup}' does not match any {input}; please choose one of:\n {choices}",
      "no_such_input": "No input '{name}' exists on {command}"
    },
    "exception": {
      "invalid_config_type": "SDK configuration class must extend from Nexcess\\Sdk\\Util\\Config; {type} specified",
      "missing_questionhelper": "Symfony's QuestionHelper is not available",
      "not_sandboxed": "Sandbox mode is not enabled",
      "profile_not_found": "Could not find profile '{profile}' in current directory or any parent directory",
      "unsupported_profile_type": "user profile format must be one of {supported}; '{type}' is not a supported"
    },
    "no_data": " -- no data -- ",
    "opt_api_token": "Your API Token (log in to your portal to create one)",
    "opt_json": "Display command output as json? (this does not affect interactive output; see --no-interaction)",
    "opt_language": "Specify preferred language (currently, only en_US is supported)",
    "opt_profile": "Filename of the user profile to load; or one of nexcess|thermo to use the default profiles",
    "opt_sandboxed": "Do not send any API requests",
    "opt_wait": "Wait for long-running commands to complete (this can block for a long time)?",
    "tests": {
      "test_phrase": "This is a test",
      "test_phrase_with_replacement": "This is a {test}"
    }
  }
}
